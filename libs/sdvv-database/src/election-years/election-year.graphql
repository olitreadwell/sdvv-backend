
type ElectionYear {
  "A election year that has at least one primary or general election. This is usually an even numbered year."
  year: String

  "All elections within the year that are in eFile and which have candidates."
  elections: [Election]

  "All candidates that are running in an election year and which have an identified committee."
  candidates: [Candidate]

  "The count of all candidates that are running in an election year and which have a identified committee."
  candidateCount: Int

  "Returns and object with a key for each type of office. If the office does not have an election in the year then its value is null"
  officesByType: OfficesByType
}

input YearCandidateFilters {
  inPrimaryElection: Boolean = false
  inGeneralElection: Boolean = false
}

type Query {
  """
  Returns all years with an election, candidates, and Campaign Finance Data available
  in XLSX on eFile. Example: '2020' or '2022'

  The range of election years start at '2016.'
  """
  electionYears: [ElectionYear]

  """
  Returns a single election year. Use electionYears: to determine valid inputs for year.
  """
  electionYear(year: String!, filters: YearCandidateFilters): ElectionYear
}
