# This docker-compose.yml is only used to run containers locally for development and testing.
# To run olny this compose and explude the override run:
#  docker compose -f docker-compose.yml up
# To include the override run:
#  docker compose up
version: "3.9"
services:
  api:
    extends:
      file: common-services.yml
      service: server
    command: >
      bash -c "node dist/apps/sdvv-backend-nest/main"
    depends_on:
      migrations:
        condition: service_completed_successfully
    ports:
      - 3000:3000

  worker:
    extends:
      file: common-services.yml
      service: server
    # Run this in the container's terminal: 
    #  npm run db:initialize:data
    command: >
      bash -c "node dist/apps/standalone-worker/main"
    depends_on:
      migrations:
        condition: service_completed_successfully

  migrations:
    extends:
      file: common-services.yml
      service: server
    build: 
      target: development
    command: >
      bash -c "npm run db:migration:run"
    depends_on:
      postgres_db_dev:
        condition: service_healthy
      redis:
        condition: service_healthy

  postgres_db_dev:
    image: "postgres:latest"
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: example
      POSTGRES_DB: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - postgres_db_network

  redis:
    image: redis:alpine
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    ports:
     - 6379:6379
    networks:
      - postgres_db_network

networks:
  postgres_db_network:
    driver: bridge

# https://www.tomray.dev/nestjs-docker-compose-postgres

# when changing docker file run: 
# docker compose build
# then
# docker compose up